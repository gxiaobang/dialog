/**
 * 混合
 */

@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

// keyframes动画帧
@mixin frames-fade($a, $b) {
  0% {
    opacity: $a;
  }
  100% {
    opacity: $b;
  }
}
@mixin frames-scale($a, $b) {
  0% {
    transform: scale(#{$a});
  }
  100% {
    transform: scale(#{$b});
  }
}
@mixin frames-slide($a, $b) {
  0% {
    height: $a;
  }
  100% {
    height: $b;
  }
}
@mixin frames-rotate($a, $b) {
  0% {
    transform: rotate(#{$a});
  }
  100% {
    transform: rotate(#{$b});
  }
}
// === End keyframes动画帧 ===


// 透明度
@mixin opacity($value: 1) {
  opacity: $value;
  filter: alpha(opacity=#{$value * 100});
}

// 背景rgba
@mixin bg-rgba($red: 0, $green: 0, $blue: 0, $opacity: 1) {
  $hex: ie-hex-str(rgba($red, $green, $blue, $opacity));
  background-color: rgba($red, $green, $blue, $opacity);
  // 兼容旧版ie
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startcolorstr=#{$hex},endcolorstr=#{$hex})";
}

/**
 * 三角形
 * @param  {[list]} $edge: [边长, 顺时针设置]
 * eg: @include triangle((bottom: 6px, Left: 4px, right: 4px)) 向上的三角
 */
@mixin triangle($edge: (top: 4px, right: 4px, left: 4px)) {
  border-style: solid;
  border-color: transparent;

  // border: $size solid transparent;
  // border-#{$dir}-color: currentColor;
  $flag: true;
  @each $dir, $val in $edge {
    @if $flag == true {
      border-#{$dir}-color: currentColor;
      $flag: false;
    }
    border-#{$dir}-width: $val;
  }
}